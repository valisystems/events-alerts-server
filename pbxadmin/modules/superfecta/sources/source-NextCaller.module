<?php

class NextCaller extends superfecta_base {

    public $description = "https://www.nextcaller.com This data source returns CNAM data for any NANPA phone number (any number that starts with +1).";
    public $version_requirement = "2.11";
    public $source_param = array(
        'Auth_Code' => array(
                'description' => 'Auth Token from NextCaller Dashboard',
                'type' => 'textarea'
        ),
        'Ignore_Keywords' => array(
                'description' => 'If this source provides CNAM including any of the keywords listed here, the CNAM will be ignored and other sources will be used to find the value.<br>Separate keywords with commas.',
                'type' => 'textarea',
                'default' => 'unavailable, unknown'
        )
    );

    function get_caller_id($thenumber, $run_param=array()) {

        $caller_id = null;
        $this->DebugPrint("Searching Nextcaller ... ");

		$url = "https://api.nextcaller.com/v1/auth?format=json&auth_code=".$run_param['Auth_Code'];
		$o = json_decode($this->get_url_contents($url),TRUE);
		
		if(!empty($o['access_token'])) {
			$url = "https://api.nextcaller.com/v1/users?phone=".$thenumber."&format=json&access_token=".$o['access_token'];
			$o = json_decode($this->get_url_contents($url),TRUE);
			foreach($o as $user) {
				if($user['member']) {
			        if (strlen($user['name']) > 1) {
		                // convert list of ignore keywords into array
		                $key_words = array();
		                $temp_array = explode(',',(isset($run_param['Ignore_Keywords'])?$run_param['Ignore_Keywords']:$source_param['Ignore_Keywords']['default']));
		                foreach($temp_array as $val) {
		                    $key_words[] = trim($val);
		                }

		                // Remove all ignore keywords from the retuned CNAM string and compare the before and after.
		                $test_string = str_ireplace($key_words,'',$user['name']);
		                if($test_string == $user['name']) {
		                    $this->DebugPrint("CNAM determined good.");
							return($user['name']);
		                } else {
		                    $this->DebugPrint("CNAM contains flagged key words, returning nothing.");
			         	}
			        }
				}
			}
			$this->DebugPrint("CNAM not found.");
		} else {
			$this->DebugPrint("Access Token Error.");
		}
		return false;
    }
}